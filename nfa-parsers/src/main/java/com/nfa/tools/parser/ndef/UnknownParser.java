package com.nfa.tools.parser.ndef;import android.nfc.NdefRecord;import com.nfa.tools.api.INfaParser;import com.nfa.tools.api.INfaRecord;import com.nfa.tools.parser.base.NfaParserAdapter;import com.nfa.tools.records.factory.NfaRecordFactory;import com.nfa.tools.records.ndef.UnknownRecord;/** * @author jefBinomed *  *  *         {@link INfaParser} for Unkown data. *  *         The return value is a {@link UnknownRecord} *  *         a {@link IllegalArgumentException} could be thrown if the type is not empty *  */public class UnknownParser extends NfaParserAdapter {	UnknownParser() {	}	/*	 * (non-Javadoc)	 * 	 * @see com.nfa.tools.parser.base.NfaParserAdapter#parseNdef(android.nfc.NdefRecord)	 */	@Override	public INfaRecord parseNdef(NdefRecord ndefRecord) {		byte[] type = ndefRecord.getType();		if (type != null && type.length > 0) {			throw new IllegalArgumentException("Record type not expeted");		}		return NfaRecordFactory.ndefFactory().unknownRecordInstance(ndefRecord.getPayload());	}}